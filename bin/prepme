#!/bin/bash

if [ -z "$1" ]; then
cat <<EOU
Prepare multi-echo files for later analyses.

Usage: prepme \\
       -i <echo1.nii.gz> -i <echo2.nii.gz> -i <...>   \\
       [-j <echo1.json>] [-j <echo2.json>] [-j <...>] \\
       [-r <tr>] [-t <slice_timings>]                 \\
       [-d <del_vols>] [-f <bet_f>]

The inputs are 4D image files, one per echo. The first file
entered is the reference (usually the 1st echo).

This script requires FSL installed and configured.

_____________________________________
Anderson M. Winkler
National Institutes of Health
Oct/2018
http://brainder.org
EOU
exit 1
fi

ECHO_IN=""
ECHO_JS=""
TR=""
ST=""
DELVOLS=0
BETF=0.5

# Check and accept the arguments
while getopts 'i:j:r:t:d:f:' OPTION
do
  case ${OPTION} in
    i) ECHO_IN="${ECHO_IN} ${OPTARG}" ;;
    j) ECHO_JS="${ECHO_JS} ${OPTARG}" ;;
    r) TR=${OPTARG} ;;
    t) ST=${OPTARG} ;;
    d) DELVOLS=${OPTARG} ;;
    f) BETF=${OPTARG} ;;
  esac
done

# Step 0: Remove file extension from file names:
tmp=""
for e in ${ECHO_IN} ; do
	tmp="${tmp} $(${FSLDIR}/bin/remove_ext ${e})"
done
ECHO_IN=(${tmp})

echo "Step 1: Slice timing correction"
if [[ -z "${TR}" ]] ; then
	TR=$(${FSLDIR}/bin/fslinfo ${ECHO_IN[0]} | grep ^pixdim4 | awk '{print $2}')
fi
if [[ -z "${ST}" ]] ; then
	for e in ${ECHO_IN[@]} ; do
		${FSLDIR}/bin/slicetimer -i ${e} -o ${e}_step1 -r ${TR} --odd
	done
else
	for e in ${ECHO_IN[@]} ; do
		${FSLDIR}/bin/slicetimer -i ${e} -o ${e}_step1 -r ${TR} --tcustom=${ST}
	done
fi

echo "Step 2: Removal of non-steady state scans"
if [[ ${DELVOLS} -ne 0 ]] ; then
	for e in ${ECHO_IN[@]} ; do
#		dim4=$(${FSLDIR}/bin/fslinfo ${e} | grep ^dim4 | awk '{print $2}')
#		nvols=$(expr ${dim4} - ${DELVOLS})
#		${FSLDIR}/bin/fslroi ${e}_step1 ${e}_step2 ${DELVOLS} ${nvols}
		${FSLDIR}/bin/fslroi ${e}_step1 ${e}_step2 ${DELVOLS} -1
	done
else
	for e in ${ECHO_IN[@]} ; do
		${FSLDIR}/bin/imln ${e}_step1 ${e}_step2
	done
fi

echo "Step 3: Motion correction with MCFLIRT"
enum=1
for e in ${ECHO_IN[@]} ; do
	if [[ ${enum} -eq 1 ]] ; then
		e1=${e}
		${FSLDIR}/bin/mcflirt -in ${e1}_step2 -out ${e1}_step3 -mats
		cat ${e1}_step3.mat/MAT_* > ${e1}_step3.mtx
		#if [[ -e ${e}_step3.mat/MAT_0000 ]] ; then
		#	for m in ${e1}_step3.mat/MAT_* ; do
		#		mv ${m} ${m/MAT_/MAT_0}
		#	done
		#fi
		${FSLDIR}/bin/fslroi ${e1}_step2 ${e1}_step2_vol1 0 1
		((enum++))
	fi
	#${FSLDIR}/bin/applyxfm4D ${e}_step2 ${e1}_temp ${e}_step3 ${e1}_step3.mat 1> /dev/null
	${FSLDIR}/bin/applywarp -i ${e}_step2 -r ${e1}_step2_vol1 -o ${e}_step3 --premat=${e1}_step3.mtx 1> /dev/null
done
${FSLDIR}/bin/imrm ${e1}_step2_vol1

echo "Final step: Averaging of timeseries of first echo BET, and mask"
${FSLDIR}/bin/fslmaths ${e1}_step3 -Tmean ${e1}_step3_avg
${FSLDIR}/bin/bet ${e1}_step3_avg ${e1}_step3_brain -m -f ${BETF}
${FSLDIR}/bin/fslmaths ${e1}_step3 -bin -Tmean -thr 1 -bin -mul ${e1}_step3_brain_mask ${e1}_main_mask
