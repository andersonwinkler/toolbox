#!/bin/bash

if [ -z "$1" ]; then
cat <<EOU
Compute the sum of partial volume effects for GM, WM, and CSF, for each
of the regions of FreeSurfer's subcortical segmentation.

Both FSL and FreeSurfer are necessary. Make sure your variables
\$FSLDIR, \$FREESURFER_HOME and \$SUBJECTS_DIR have been configured.

Usage: asegpve -s <subjid> [-p <prefix>] [opts]

-s <subjid>   : Subject (already processed with recon-all). More than
                one can be supplied with multiple -s.
-p <prefix>   : File prefix for the outputs. Files will be named
                "{prefix}_myelin_pvc.csv".
                Default is simply "./output"
-a            : Do for the aseg (subcortical).
-c            : Do for the aparc (cortical).
-g            : Do for the amygdala nuclei.
-h            : Do for the hippocampal subfields.
-t            : Do for the thalamic nuclei.

_____________________________________
Anderson M. Winkler & Andre Zugman
National Institutes of Health (NIH/NIMH)
Aug/2018 (first version)
Feb/2021 (this version)
http://brainder.org
EOU
exit 1
fi

# Check and accept the input arguments
SBJLIST=""
PREFIX="output"
PARC=""
while getopts 's:p:acghtd:' OPTION
do
   case ${OPTION} in
      s) SBJLIST=$( [[ -f ${OPTARG} ]] && cat ${OPTARG} || echo "${SBJLIST} ${OPTARG}" ) ;;
      p) PREFIX=${OPTARG} ;;
      a) PARC="${PARC} aseg" ;;
      c) PARC="${PARC} aparc" ;;
      g) PARC="${PARC} amyg" ;;
      h) PARC="${PARC} hipp" ;;
      t) PARC="${PARC} thal" ;;
      d) SUBJECTS_DIR=${OPTARG} ;;
   esac
done

if [[ -z ${SBJLIST} ]] || [[ -z ${PARC} ]] ; then
   echo "Insufficient arguments given."
   exit 1
fi

declare -A LABLIST
declare -A LABNAMES
declare -A LABFILE

# List of labels
LABLIST[aseg]="4 5 7 8 10 11 12 13 14 15 16 17 18 24 26 28 30 31 43 44 46 47 49 50 51 52 53 54 58 60 62 63 72 77 78 79 80 81 82 85 251 252 253 254 255"
LABLIST[aparc]="1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035"
LABLIST[hipp]="203 211 212 215 226 233 234 235 236 237 238 239 240 241 242 243 244 245 246"
LABLIST[amyg]="7001 7003 7005 7006 7007 7008 7009 7010 7015"
LABLIST[thal]="8103 8104 8105 8106 8108 8109 8110 8111 8112 8113 8115 8116 8117 8118 8120 8121 8122 8123 8126 8127 8128 8129 8133 \
               8203 8204 8205 8206 8208 8209 8210 8211 8212 8213 8215 8216 8217 8218 8220 8221 8222 8223 8226 8227 8228 8229 8233"

# File names with the segmentations
LABFILE[aseg]=aseg.mgz
LABFILE[aparc]=aparc+aseg.mgz
LABFILE[amyg]="lh.hippoAmygLabels-T1.v21.FSvoxelSpace.mgz rh.hippoAmygLabels-T1.v21.FSvoxelSpace.mgz"
LABFILE[hipp]="lh.hippoAmygLabels-T1.v21.FSvoxelSpace.mgz rh.hippoAmygLabels-T1.v21.FSvoxelSpace.mgz"
LABFILE[thal]=ThalamicNuclei.v10.T1.FSvoxelSpace.mgz

# Create headers for the output files
for parc in ${PARC} ; do
   LABNAMES[${parc}]=$(awk 'BEGIN {ORS=","} NR==FNR {A[$1]=1 ; next} $1 in A {print $2}' \
                  <(echo ${LABLIST[${parc}]}|tr " " "\n") \
                  <(cat  ${FREESURFER_HOME}/FreeSurferColorLUT.txt))
   for labfile in ${LABFILE[${parc}]} ; do
       echo "bids_name,${LABNAMES[${parc}]%?}" > ${PREFIX}_${parc}_${labfile%.mgz}_myelin_pvc.csv
   done
done

# For each subject
for subj in ${SBJLIST} ; do
   echo "Working on subject ${subj}"
   if [[ -f ${SUBJECTS_DIR}/${subj}/melina/myelin_pvc.mgz ]] ; then
      echo "- Converting file format."
      ${FREESURFER_HOME}/bin/mri_convert -it mgz -ot nii \
                           ${SUBJECTS_DIR}/${subj}/melina/myelin_pvc.mgz \
                           ${SUBJECTS_DIR}/${subj}/tmp/myelin_pvc.nii.gz
      for parc in ${PARC} ; do
         for labfile in ${LABFILE[${parc}]} ; do
            if [[ -f ${SUBJECTS_DIR}/${subj}/mri/${labfile} ]] ; then
               echo "- Creating separate volumes for ${parc} (${labfile})."
               ${FREESURFER_HOME}/bin/mri_convert -it mgz -ot nii \
                                ${SUBJECTS_DIR}/${subj}/mri/${labfile} \
                                ${SUBJECTS_DIR}/${subj}/tmp/${labfile/.mgz/.nii.gz}
               for lab in ${LABLIST[${parc}]} ; do
                  ${FSLDIR}/bin/fslmaths ${SUBJECTS_DIR}/${subj}/tmp/${labfile%.mgz} \
                                        -thr ${lab} -uthr ${lab} -bin \
                                         ${SUBJECTS_DIR}/${subj}/tmp/${labfile%.mgz}_${lab}
               done
               echo "- Working on myelin for ${parc} (${labfile})."
               M="${subj}"
               for lab in ${LABLIST[${parc}]} ; do
                  m=$(${FSLDIR}/bin/fslstats ${SUBJECTS_DIR}/${subj}/tmp/myelin_pvc \
                                          -k ${SUBJECTS_DIR}/${subj}/tmp/${labfile%.mgz}_${lab} -m)
                  M="${M},${m//[[:blank:]]/}"
               done
               echo ${M} >> ${PREFIX}_${parc}_${labfile%.mgz}_myelin_pvc.csv
               ${FSLDIR}/bin/imrm ${SUBJECTS_DIR}/${subj}/tmp/${labfile%.mgz}*
            else
               echo "- File not found: ${SUBJECTS_DIR}/${subj}/mri/${LABFILE[${parc}]}. Skipping ${parc}."
            fi
         done
      done
      ${FSLDIR}/bin/imrm ${SUBJECTS_DIR}/${subj}/tmp/myelin_pvc*
   else
      echo "- File not found: ${SUBJECTS_DIR}/${subj}/melina/myelin_pvc.mgz. Skipping subject ${subj}"
   fi
done
echo "Done!"
